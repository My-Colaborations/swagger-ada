NAME=swagger

# You may edit this makefile as long as you keep these original 
# target names defined.
MODE=debug
GNATMAKE=@GNATMAKE@
GNATCLEAN=gnatclean
GPRINSTALL=@GPRINSTALL@
INSTALL=@INSTALL@
LN_S=@LN_S@
MKDIR=mkdir
CP=cp
LN=ln -s

GPRPATH:=${NAME}.gpr

BUILDS_SHARED=@BUILDS_SHARED@

version=@SWAGGER_VERSION@

distdir=swagger-@SWAGGER_VERSION@

DIST_FILE=swagger-@SWAGGER_VERSION@.tar.gz

ifeq (,Windows_NT)
LIBEXT=dll
LIBVER=dll
else
LIBEXT=so
LIBVER=so.$(version)
endif

srcdir = .
bindir = @bindir@
sbindir = @sbindir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@
top_builddir = .

PROCESSORS=@NR_CPUS@
MAKE_ARGS=-XMODE= -XSWAGGER_LIBRARY_TYPE=$(SWAGGER_LIBRARY_TYPE) -XPROCESSORS=$(PROCESSORS)
ifeq ($(SWAGGER_LIBRARY_TYPE),relocatable)
MAKE_ARGS += -XUTIL_BUILD=relocatable -XUTIL_LIBRARY_TYPE=relocatable
endif
MAKE_ARGS=-XMODE=${MODE}

ifeq (,yes)
all:     static shared
install: uninstall install_static install_shared
else
all:     static
install: uninstall install_static
endif

static:
	$(MAKE) SWAGGER_LIBRARY_TYPE=static build-test

shared:
	$(MAKE) SWAGGER_LIBRARY_TYPE=relocatable build-test
# Build executables for all mains defined by the project.
build:
	$(GNATMAKE) -p -P "$(GPRPATH)" $(MAKE_ARGS)

build-test:  build
	$(GNATMAKE) -p -Pswagger_tests $(MAKE_ARGS)

# Not intended for manual invocation.
# Invoked if automatic builds are enabled.
# Analyzes only on those sources that have changed.
# Does not build executables.
autobuild:
	$(GNATMAKE) -gnatc -c -k  -P "$(GPRPATH)"

# Clean the root project of all build products.
clean:
	-rm -rf lib obj bin

# Clean root project and all imported projects too.
clean_tree:
	$(GNATCLEAN) -P "$(GPRPATH)" -r

# Check *all* sources for errors, even those not changed.
# Does not build executables.
analyze:
	$(GNATMAKE) -f  -gnatc -c -k  -P "$(GPRPATH)"

generate:
	java -jar swagger-codegen-cli.jar generate \
           -l ada -i regtests/swagger.yaml -o regtests/client \
           -DprojectName=TestAPI --model-package TestAPI
	java -jar swagger-codegen-cli.jar generate \
           -l ada-server -i regtests/swagger.yaml -o regtests/server \
           -DprojectName=TestAPI --model-package TestAPI

# Clean, then build executables for all mains defined by the project.
rebuild: clean build

# Build and run the unit tests
test:	build-test
	bin/swagger_harness -xml swagger-aunit.xml

dist:
	git archive -o $(DIST_FILE) --prefix=$(distdir)/ HEAD

install_static:
	$(MAKE) SWAGGER_LIBRARY_TYPE=static install_lib

install_shared:
	$(MAKE) SWAGGER_LIBRARY_TYPE=relocatable install_lib

install_lib:
	$(GPRINSTALL) -p -f --prefix=$(prefix) $(MAKE_ARGS) \
		--build-name=$(SWAGGER_LIBRARY_TYPE) $(GPRPATH)

uninstall:
	-$(GPRINSTALL) -q -f --prefix=$(prefix) $(MAKE_ARGS) --uninstall $(GPRPATH)
