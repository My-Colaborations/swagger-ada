## The type of library we want to build. Possible values:
##	 relocatable
##	 static
SWAGGER_LIBRARY_TYPE=static

NAME=swagger

# You may edit this makefile as long as you keep these original 
# target names defined.
MODE=@MODE@
GNATMAKE=@GNATMAKE@
GNATCLEAN=gnatclean
GPRINSTALL=@GPRINSTALL@
INSTALL=@INSTALL@

GPRPATH:=${NAME}.gpr
SERVER_GPRPATH:=${NAME}_server.gpr

BUILDS_SHARED=@BUILDS_SHARED@

version=@SWAGGER_VERSION@

distdir=swagger-@SWAGGER_VERSION@

DIST_FILE=swagger-@SWAGGER_VERSION@.tar.gz

LN_S=@LN_S@
MKDIR=mkdir
CP=cp
LN=ln -s

HAVE_SERVER=@SWAGGER_HAVE_SERVER@

ifeq (${OS},Windows_NT)
LIBEXT=dll
LIBVER=dll
else
LIBEXT=so
LIBVER=so.$(version)
endif

srcdir = .
bindir = @bindir@
sbindir = @sbindir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@
sharedir= ${prefix}/share
top_builddir = .

PROCESSORS=@NR_CPUS@
COVERAGE=@BUILDS_COVERAGE@
MAKE_ARGS=-XMODE=${MODE} -XCOVERAGE=${COVERAGE}
MAKE_ARGS += -XSWAGGER_LIBRARY_TYPE=$(SWAGGER_LIBRARY_TYPE) -XPROCESSORS=$(PROCESSORS)
ifeq ($(SWAGGER_LIBRARY_TYPE),relocatable)
MAKE_ARGS += -XUTIL_BUILD=relocatable -XUTIL_LIBRARY_TYPE=relocatable
MAKE_ARGS += -XEL_BUILD=relocatable -XEL_LIBRARY_TYPE=relocatable
MAKE_ARGS += -XSECURITY_BUILD=relocatable -XSECURITY_LIBRARY_TYPE=relocatable
MAKE_ARGS += -XSERVLET_CORE_BUILD=relocatable -XSERVLET_CORE_LIBRARY_TYPE=relocatable
MAKE_ARGS += -XSERVLET_UNIT_BUILD=relocatable -XSERVLET_UNIT_LIBRARY_TYPE=relocatable
endif

ifeq (${BUILDS_SHARED},yes)
all:     static shared
install: uninstall install_shared install_static install_web
else
all:     static
install: uninstall install_static install_web
endif

static:
	$(MAKE) SWAGGER_LIBRARY_TYPE=static build-test

shared:
	$(MAKE) SWAGGER_LIBRARY_TYPE=relocatable build-test

# Build executables for all mains defined by the project.
build: setup
	$(GNATMAKE) -p -P "$(GPRPATH)" $(MAKE_ARGS)
ifeq (${HAVE_SERVER},yes)
	$(GNATMAKE) -p -P $(SERVER_GPRPATH) $(MAKE_ARGS)
endif

build-test:  build
ifeq (${HAVE_SERVER},yes)
	$(GNATMAKE) -p -Ptestapi_server $(MAKE_ARGS)
endif
	$(GNATMAKE) -p -Pswagger_tests $(MAKE_ARGS)

ifeq (${HAVE_SERVER},yes)
setup: src/server/swagger-servers-config.ads

src/server/swagger-servers-config.ads: Makefile src/server/swagger-servers-config.gpb
	gnatprep -DWEB_DIR=\"${sharedir}/swagger-ada/web\" \
		src/server/swagger-servers-config.gpb $@
else
setup:
endif


# Not intended for manual invocation.
# Invoked if automatic builds are enabled.
# Analyzes only on those sources that have changed.
# Does not build executables.
autobuild:
	$(GNATMAKE) $(MAKE_ARGS) -gnatc -c -k  -P "$(GPRPATH)"

# Clean the root project of all build products.
clean:	clean_test
	-rm -rf lib obj bin

# Clean the files produced by the unit tests
clean_test:
	rm -rf regtests/result/*

# Clean root project and all imported projects too.
clean_tree:
	$(GNATCLEAN) -q -P "$(GPRPATH)" -r

# Check *all* sources for errors, even those not changed.
# Does not build executables.
analyze:
	$(GNATMAKE) -f  -gnatc -c -k  -P "$(GPRPATH)"

generate:
	java -jar openapi-generator-cli.jar generate \
           --generator-name ada -i regtests/swagger.yaml -o regtests/client \
           -DprojectName=TestAPI --model-package TestAPI
	java -jar openapi-generator-cli.jar generate \
           --generator-name ada-server -i regtests/swagger.yaml -o regtests/server \
           -DprojectName=TestAPI --model-package TestAPI

# Clean, then build executables for all mains defined by the project.
rebuild: clean build

# Build and run the unit tests
test:	build-test
ifeq (${HAVE_SERVER},yes)
	bin/testapi-server & \
        SERVER_PID=$$!; \
        sleep 1; \
	bin/swagger_harness -config tests.properties -xml swagger-aunit.xml ;\
        kill $$SERVER_PID
else
	bin/swagger_harness -config tests-client.properties -xml swagger-aunit.xml
endif

dist:
	git archive -o $(DIST_FILE) --prefix=$(distdir)/ HEAD

install_static:
	$(MAKE) SWAGGER_LIBRARY_TYPE=static install_lib

install_shared:
	$(MAKE) SWAGGER_LIBRARY_TYPE=relocatable install_lib

install_lib:
	$(GPRINSTALL) -p -f --prefix=$(prefix) $(MAKE_ARGS) \
		--build-name=$(SWAGGER_LIBRARY_TYPE) $(GPRPATH)
ifeq (${HAVE_SERVER},yes)
	$(GPRINSTALL) -p -f --prefix=$(prefix) $(MAKE_ARGS) \
		--build-name=$(SWAGGER_LIBRARY_TYPE) $(SERVER_GPRPATH)
endif

install_web:
	rm -rf ${sharedir}/swagger-ada
	${MKDIR} -p ${sharedir}/swagger-ada
	${CP} -rp web ${sharedir}/swagger-ada/web

uninstall:
	-$(GPRINSTALL) -q -f --prefix=$(prefix) $(MAKE_ARGS) --uninstall $(GPRPATH)
ifeq (${HAVE_SERVER},yes)
	-$(GPRINSTALL) -q -f --prefix=$(prefix) $(MAKE_ARGS) --uninstall $(SERVER_GPRPATH)
endif
