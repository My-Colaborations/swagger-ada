{
  "swagger" : "2.0",
  "info" : {
    "description" : "API to validate",
    "version" : "1.0.0",
    "title" : "REST API Validation",
    "termsOfService" : "https://github.com/terms/",
    "contact" : {
      "email" : "Stephane.Carrez@gmail.com"
    },
    "license" : {
      "name" : "Apache Licence",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host" : "SWAGGER_HOST",
  "basePath" : "/v1",
  "tags" : [ {
    "name" : "tickets",
    "description" : "Tickets operations"
  } ],
  "schemes" : [ "https", "http" ],
  "paths" : {
    "/tickets" : {
      "get" : {
        "tags" : [ "tickets" ],
        "summary" : "List the tickets",
        "description" : "List the tickets created for the project.\n",
        "operationId" : "do_list_tickets",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "status",
          "in" : "query",
          "description" : "The ticket status",
          "required" : false,
          "type" : "string",
          "enum" : [ "open onhold assigned closed rejected" ],
          "x-is-model-type" : false
        }, {
          "name" : "owner",
          "in" : "query",
          "description" : "The owner",
          "required" : false,
          "type" : "string",
          "x-is-model-type" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Ticket"
              }
            }
          },
          "400" : {
            "description" : "Invalid status value"
          }
        },
        "security" : [ {
          "ticket_auth" : [ "read:ticket" ]
        } ],
        "x-codegen-response" : {
          "baseName" : "response",
          "complexType" : "Ticket",
          "getter" : "getResponse",
          "setter" : "setResponse",
          "datatype" : "TestAPI.Models.Ticket_Type_Vectors.Vector",
          "datatypeWithEnum" : "TestAPI.Models.Ticket_Type_Vectors.Vector",
          "name" : "Response",
          "defaultValue" : "null",
          "defaultValueWithParam" : " = data.response;",
          "baseType" : "array",
          "containerType" : "array",
          "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/Ticket\"\n  }\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "hasMore" : false,
          "required" : false,
          "secondaryParam" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : false,
          "isContainer" : true,
          "isNotContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isLong" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isListContainer" : true,
          "isMapContainer" : false,
          "isEnum" : false,
          "isReadOnly" : false,
          "items" : {
            "baseName" : "Response",
            "complexType" : "Ticket",
            "getter" : "getResponse",
            "setter" : "setResponse",
            "datatype" : "TestAPI.Models.Ticket_Type",
            "datatypeWithEnum" : "TestAPI.Models.Ticket_Type",
            "name" : "Response",
            "defaultValue" : "null",
            "defaultValueWithParam" : " = data.Response;",
            "baseType" : "Ticket",
            "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/Ticket\"\n}",
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "hasMore" : false,
            "required" : false,
            "secondaryParam" : false,
            "hasMoreNonReadOnly" : false,
            "isPrimitiveType" : false,
            "isContainer" : false,
            "isNotContainer" : true,
            "isString" : false,
            "isNumeric" : false,
            "isInteger" : false,
            "isLong" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isFile" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isListContainer" : false,
            "isMapContainer" : false,
            "isEnum" : false,
            "isReadOnly" : false,
            "vendorExtensions" : { },
            "hasValidation" : false,
            "isInherited" : false,
            "nameInCamelCase" : "Response",
            "isXmlAttribute" : false,
            "isXmlWrapped" : false
          },
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "Response",
          "isXmlAttribute" : false,
          "isXmlWrapped" : false
        },
        "x-has-uniq-produces" : true,
        "x-has-uniq-consumes" : false,
        "x-has-notes" : true
      },
      "post" : {
        "tags" : [ "ticket" ],
        "summary" : "Create a ticket",
        "description" : "",
        "operationId" : "do_create_ticket",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "owner",
          "in" : "formData",
          "description" : "Ticket owner",
          "required" : false,
          "type" : "string",
          "x-is-model-type" : false
        }, {
          "name" : "status",
          "in" : "formData",
          "description" : "Ticket status",
          "required" : false,
          "type" : "string",
          "enum" : [ "open assigned closed" ],
          "x-is-model-type" : false
        }, {
          "name" : "title",
          "in" : "formData",
          "description" : "Ticket title",
          "required" : true,
          "type" : "string",
          "x-is-model-type" : false
        }, {
          "name" : "description",
          "in" : "formData",
          "description" : "Ticket description",
          "required" : false,
          "type" : "string",
          "x-is-model-type" : false
        } ],
        "responses" : {
          "201" : {
            "description" : "ticket created",
            "headers" : {
              "Location" : {
                "type" : "string",
                "description" : "The URL of the new ticket"
              }
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        },
        "security" : [ {
          "ticket_auth" : [ "write:ticket" ]
        } ],
        "x-has-uniq-produces" : true,
        "x-has-uniq-consumes" : true,
        "x-has-notes" : false
      }
    },
    "/tickets/{tid}" : {
      "get" : {
        "tags" : [ "tickets" ],
        "summary" : "Get a ticket",
        "description" : "Get a ticket",
        "operationId" : "do_get_ticket",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "tid",
          "in" : "path",
          "description" : "Ticket identifier",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-is-model-type" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Ticket"
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Ticket not found"
          }
        },
        "security" : [ {
          "ticket_auth" : [ "read:ticket" ]
        } ],
        "x-codegen-response" : {
          "baseName" : "response",
          "complexType" : "Ticket",
          "getter" : "getResponse",
          "setter" : "setResponse",
          "datatype" : "TestAPI.Models.Ticket_Type",
          "datatypeWithEnum" : "TestAPI.Models.Ticket_Type",
          "name" : "Response",
          "defaultValue" : "null",
          "defaultValueWithParam" : " = data.response;",
          "baseType" : "Ticket",
          "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/Ticket\"\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "hasMore" : false,
          "required" : false,
          "secondaryParam" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : false,
          "isContainer" : false,
          "isNotContainer" : true,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isLong" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isListContainer" : false,
          "isMapContainer" : false,
          "isEnum" : false,
          "isReadOnly" : false,
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "Response",
          "isXmlAttribute" : false,
          "isXmlWrapped" : false
        },
        "x-has-uniq-produces" : true,
        "x-has-uniq-consumes" : false,
        "x-has-notes" : true
      },
      "put" : {
        "tags" : [ "ticket" ],
        "summary" : "Update a ticket",
        "description" : "",
        "operationId" : "do_update_ticket",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "tid",
          "in" : "path",
          "description" : "Ticket identifier",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-is-model-type" : false
        }, {
          "name" : "owner",
          "in" : "formData",
          "description" : "Ticket owner",
          "required" : false,
          "type" : "string",
          "x-is-model-type" : false
        }, {
          "name" : "status",
          "in" : "formData",
          "description" : "Ticket status",
          "required" : false,
          "type" : "string",
          "enum" : [ "open onhold assigned closed rejected" ],
          "x-is-model-type" : false
        }, {
          "name" : "title",
          "in" : "formData",
          "description" : "Ticket title",
          "required" : false,
          "type" : "string",
          "x-is-model-type" : false
        }, {
          "name" : "description",
          "in" : "formData",
          "description" : "Ticket description",
          "required" : false,
          "type" : "string",
          "x-is-model-type" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Ticket"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        },
        "security" : [ {
          "ticket_auth" : [ "write:ticket" ]
        } ],
        "x-codegen-response" : {
          "baseName" : "response",
          "complexType" : "Ticket",
          "getter" : "getResponse",
          "setter" : "setResponse",
          "datatype" : "TestAPI.Models.Ticket_Type",
          "datatypeWithEnum" : "TestAPI.Models.Ticket_Type",
          "name" : "Response",
          "defaultValue" : "null",
          "defaultValueWithParam" : " = data.response;",
          "baseType" : "Ticket",
          "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/Ticket\"\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "hasMore" : false,
          "required" : false,
          "secondaryParam" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : false,
          "isContainer" : false,
          "isNotContainer" : true,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isLong" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isListContainer" : false,
          "isMapContainer" : false,
          "isEnum" : false,
          "isReadOnly" : false,
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "Response",
          "isXmlAttribute" : false,
          "isXmlWrapped" : false
        },
        "x-has-uniq-produces" : true,
        "x-has-uniq-consumes" : true,
        "x-has-notes" : false
      },
      "delete" : {
        "tags" : [ "ticket" ],
        "summary" : "Delete a ticket",
        "description" : "",
        "operationId" : "do_delete_ticket",
        "parameters" : [ {
          "name" : "tid",
          "in" : "path",
          "description" : "Ticket identifier",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-is-model-type" : false
        } ],
        "responses" : {
          "204" : {
            "description" : "No content."
          },
          "404" : {
            "description" : "Invalid ticket identifier."
          }
        },
        "security" : [ {
          "ticket_auth" : [ "write:ticket" ]
        } ],
        "x-has-uniq-produces" : false,
        "x-has-uniq-consumes" : false,
        "x-has-notes" : false
      }
    },
    "/orchestration" : {
      "post" : {
        "description" : "Query an orchestrated service instance",
        "operationId" : "orchStore",
        "parameters" : [ {
          "in" : "body",
          "name" : "serviceRequestForm",
          "description" : "Requests an orchestrated service instance",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/serviceRequestForm"
          },
          "x-is-model-type" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "Response to a service orchestration request"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "x-has-uniq-produces" : false,
        "x-has-uniq-consumes" : false,
        "x-has-notes" : true
      }
    }
  },
  "securityDefinitions" : {
    "ticket_auth" : {
      "type" : "oauth2",
      "authorizationUrl" : "/oauth/authorize",
      "flow" : "implicit",
      "scopes" : {
        "write:ticket" : "Update a ticket",
        "read:ticket" : "Read a ticket"
      }
    }
  },
  "definitions" : {
    "Ticket" : {
      "type" : "object",
      "required" : [ "create_date", "description", "id", "status", "title" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "x-is-model-type" : false
        },
        "title" : {
          "type" : "string",
          "description" : "Title of the ticket",
          "x-is-model-type" : false
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the ticket",
          "x-is-model-type" : false
        },
        "owner" : {
          "type" : "string",
          "description" : "The ticket owner",
          "x-is-model-type" : false
        },
        "create_date" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Ticket creation date",
          "x-is-model-type" : false
        },
        "end_date" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Ticket deadline date",
          "x-is-model-type" : false
        },
        "update_date" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Ticket last change date",
          "x-is-model-type" : false
        },
        "status" : {
          "type" : "string",
          "description" : "Ticket status",
          "enum" : [ "open onhold assigned closed rejected" ],
          "x-is-model-type" : false
        }
      },
      "title" : "Information about a ticket",
      "example" : {
        "owner" : "owner",
        "end_date" : "2000-01-23T04:56:07.000+00:00",
        "description" : "description",
        "id" : 0,
        "title" : "title",
        "create_date" : "2000-01-23T04:56:07.000+00:00",
        "update_date" : "2000-01-23T04:56:07.000+00:00",
        "status" : "open onhold assigned closed rejected"
      },
      "xml" : {
        "name" : "Ticket"
      }
    },
    "stringsMap" : {
      "type" : "object",
      "properties" : {
        "key" : {
          "type" : "string",
          "x-is-model-type" : false
        }
      }
    },
    "serviceRequestForm" : {
      "type" : "object",
      "properties" : {
        "requestedQoS" : {
          "$ref" : "#/definitions/stringsMap",
          "x-is-model-type" : true
        },
        "commands" : {
          "$ref" : "#/definitions/stringsMap",
          "x-is-model-type" : true
        }
      }
    }
  },
  "externalDocs" : {
    "description" : "Find out more about Swagger",
    "url" : "http://swagger.io"
  }
}